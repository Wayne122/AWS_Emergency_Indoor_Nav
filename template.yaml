AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  my-sam-app-python

  Sample SAM Template for my-sam-app-python

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  CreateMobileUserFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateMobileUser.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateMobileUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createMobileUser
            Method: post
  GetMobileUserFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetMobileUser.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetMobileUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getMobileUser/{userId}
            Method: get

  CreateAdminFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateAdmin.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateAdmin:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createAdmin
            Method: post
  GetAdminFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetAdmin.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetAdmin:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getAdmin/{userId}
            Method: get

  CreateMapFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateMap.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateMap:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createMap
            Method: post
  GetMapFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetMap.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetMap:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getMap/{mapId}
            Method: get

  CreateEdgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateEdge.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateEdge:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createEdge
            Method: post
  GetEdgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetEdge.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetEdge:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getEdge/{edgeId}
            Method: get

  CreateIOTDeviceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateIOTDevice.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateIOTDevice:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createIOTDevice
            Method: post
  GetIOTDeviceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetIOTDevice.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetIOTDevice:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getIOTDevice/{iotId}
            Method: get

  CreateLocationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateLocations.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateLocations:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createLocations
            Method: post
  GetLocationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetLocations.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetLocations:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getLocations/{locationsId}
            Method: get

  CreateTriggerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateTrigger.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateTrigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createTrigger
            Method: post
  GetTriggerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetTrigger.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetTrigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getTrigger/{triggerId}
            Method: get

  CreateDirectionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateDirections.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateDirections:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createDirections
            Method: post
  GetDirectionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetDirections.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetDirections:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getDirections/{directionsId}
            Method: get

  CreateNotificationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: CreateNotification.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        CreateNotification:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /createNotification
            Method: post
  GetNotificationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LambdaFunctions/
      Handler: GetNotification.lambda_handler
      Runtime: python3.7
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetNotification:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getNotification/{notificationId}
            Method: get


  MobileUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MobileUser
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  AdministratorTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Administrator
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MapTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Map
      AttributeDefinitions:
        - AttributeName: mapId
          AttributeType: S
      KeySchema:
        - AttributeName: mapId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  EdgeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Edge
      AttributeDefinitions:
        - AttributeName: edgeId
          AttributeType: S
      KeySchema:
        - AttributeName: edgeId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  IOTDeviceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: IOTDevice
      AttributeDefinitions:
        - AttributeName: iotId
          AttributeType: S
      KeySchema:
        - AttributeName: iotId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  NotificationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Notification
      AttributeDefinitions:
        - AttributeName: notificationId
          AttributeType: S
      KeySchema:
        - AttributeName: notificationId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  LocationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Locations
      AttributeDefinitions:
        - AttributeName: locationsId
          AttributeType: S
      KeySchema:
        - AttributeName: locationsId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TriggerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Trigger
      AttributeDefinitions:
        - AttributeName: triggerId
          AttributeType: S
      KeySchema:
        - AttributeName: triggerId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  DirectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Directions
      AttributeDefinitions:
        - AttributeName: directionsId
          AttributeType: S
      KeySchema:
        - AttributeName: directionsId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5